name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allow manual triggering from the GitHub UI

jobs:
  build-and-push:
    name: Build and Push VisoMaster Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Might be needed depending on cache/registry setup

    steps:
      # Step 1: Get your code from GitHub
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Gets all history, useful for tags/SHAs

      # Step 2: Set up Docker Buildx (fancy builder)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub so we can push the image
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # IMPORTANT: Use a Docker Hub Access Token here, not your password!
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 4: Build the image and push it to Docker Hub
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as the build context
          file: ./Dockerfile # Tell it where your Dockerfile is
          # Only push if it's the main branch or manually triggered
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          # Tag the image with 'latest' and the specific commit ID
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/visomasterdockah:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/visomasterdockah:${{ github.sha }}
          # Use GitHub Actions cache to speed up future builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 5: Print the image digest (like a fingerprint) if it was pushed
      - name: Image digest
        if: steps.build-and-push.outputs.digest != ''
        run: echo "Pushed image digest: ${{ steps.build-and-push.outputs.digest }}"
